// <auto-generated />
using System;
using DataLibrary.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FitApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210627062045_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DataLibrary.Models.Exercise", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("exerciseName")
                        .IsRequired()
                        .HasColumnType("character varying(32)")
                        .HasMaxLength(32);

                    b.HasKey("id");

                    b.ToTable("exercises");
                });

            modelBuilder.Entity("DataLibrary.Models.ExerciseStatistic", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("PlanExerciseid")
                        .HasColumnType("integer");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("repetitions")
                        .HasColumnType("integer");

                    b.Property<int>("series")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("PlanExerciseid");

                    b.ToTable("exerciseStatistics");
                });

            modelBuilder.Entity("DataLibrary.Models.Plan", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Userid")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("planName")
                        .IsRequired()
                        .HasColumnType("character varying(32)")
                        .HasMaxLength(32);

                    b.HasKey("id");

                    b.HasIndex("Userid");

                    b.ToTable("plans");
                });

            modelBuilder.Entity("DataLibrary.Models.PlanExercise", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Exerciseid")
                        .HasColumnType("integer");

                    b.Property<int?>("Planid")
                        .HasColumnType("integer");

                    b.Property<int>("repetitions")
                        .HasColumnType("integer");

                    b.Property<int>("series")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Exerciseid");

                    b.HasIndex("Planid");

                    b.ToTable("planExercises");
                });

            modelBuilder.Entity("DataLibrary.Models.RunScore", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Userid")
                        .HasColumnType("integer");

                    b.Property<int>("distance")
                        .HasColumnType("integer");

                    b.Property<int>("time")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("Userid");

                    b.ToTable("runScores");
                });

            modelBuilder.Entity("DataLibrary.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("secondName")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("DataLibrary.Models.ExerciseStatistic", b =>
                {
                    b.HasOne("DataLibrary.Models.PlanExercise", null)
                        .WithMany("exerciseStatistics")
                        .HasForeignKey("PlanExerciseid");
                });

            modelBuilder.Entity("DataLibrary.Models.Plan", b =>
                {
                    b.HasOne("DataLibrary.Models.User", null)
                        .WithMany("plans")
                        .HasForeignKey("Userid");
                });

            modelBuilder.Entity("DataLibrary.Models.PlanExercise", b =>
                {
                    b.HasOne("DataLibrary.Models.Exercise", null)
                        .WithMany("planExercise")
                        .HasForeignKey("Exerciseid");

                    b.HasOne("DataLibrary.Models.Plan", null)
                        .WithMany("planExercise")
                        .HasForeignKey("Planid");
                });

            modelBuilder.Entity("DataLibrary.Models.RunScore", b =>
                {
                    b.HasOne("DataLibrary.Models.User", null)
                        .WithMany("runScores")
                        .HasForeignKey("Userid");
                });
#pragma warning restore 612, 618
        }
    }
}
